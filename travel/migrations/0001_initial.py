# Generated by Django 4.2.16 on 2025-01-18 19:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import travel.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email_user', models.EmailField(max_length=254, unique=True, verbose_name='Email пользователя')),
                ('name_user', models.CharField(max_length=255, verbose_name='Имя пользователя')),
                ('role_user', models.CharField(max_length=50, verbose_name='Роль пользователя')),
                ('number_user', models.CharField(max_length=15, verbose_name='Номер телефона')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_tour', models.CharField(max_length=255, verbose_name='Название тура')),
                ('discription_tour', models.TextField(verbose_name='Описание тура')),
                ('price_tour', models.IntegerField(validators=[travel.models.validate_positive], verbose_name='Цена тура')),
                ('departure', models.CharField(max_length=255, verbose_name='Место отправления')),
                ('destination', models.CharField(max_length=255, verbose_name='Место назначения')),
                ('date_departure', models.DateField(verbose_name='Дата отправления')),
                ('date_return', models.DateField(verbose_name='Дата возвращения')),
                ('operator_tour', models.CharField(max_length=255, verbose_name='Туроператор')),
                ('places_tour', models.IntegerField(validators=[travel.models.validate_positive], verbose_name='Количество мест')),
                ('is_hot', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='tours/')),
            ],
            options={
                'ordering': ['date_departure'],
            },
        ),
        migrations.CreateModel(
            name='TravelHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.tour', verbose_name='Тур')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_stock', models.CharField(max_length=255, verbose_name='Название акции')),
                ('stock_value', models.IntegerField(validators=[travel.models.validate_positive], verbose_name='Размер скидки')),
                ('status_stock', models.BooleanField(verbose_name='Статус акции')),
                ('id_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='travel.tour', verbose_name='Тур')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_review', models.TextField()),
                ('id_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='travel.tour', verbose_name='Тур')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reservation', models.DateField(verbose_name='Дата бронирования')),
                ('status_pay', models.BooleanField(verbose_name='Статус оплаты')),
                ('payment_method', models.CharField(choices=[('CARD', 'Банковская карта'), ('CASH', 'Наличные'), ('ONLINE', 'Онлайн оплата(СБП)')], max_length=50, verbose_name='Метод оплаты')),
                ('id_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='travel.tour', verbose_name='Тур')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalTour',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name_tour', models.CharField(max_length=255, verbose_name='Название тура')),
                ('discription_tour', models.TextField(verbose_name='Описание тура')),
                ('price_tour', models.IntegerField(validators=[travel.models.validate_positive], verbose_name='Цена тура')),
                ('departure', models.CharField(max_length=255, verbose_name='Место отправления')),
                ('destination', models.CharField(max_length=255, verbose_name='Место назначения')),
                ('date_departure', models.DateField(verbose_name='Дата отправления')),
                ('date_return', models.DateField(verbose_name='Дата возвращения')),
                ('operator_tour', models.CharField(max_length=255, verbose_name='Туроператор')),
                ('places_tour', models.IntegerField(validators=[travel.models.validate_positive], verbose_name='Количество мест')),
                ('is_hot', models.BooleanField(default=False)),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tour',
                'verbose_name_plural': 'historical tours',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.tour', verbose_name='Тур')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
    ]
